---
version: '3.8'
name: sneridagh-dev

services:
  traefik:
    image: traefik:v2.11

    ports:
      - 80:80

    labels:
      - traefik.enable=true
      - traefik.constraint-label=public

      # GENERIC MIDDLEWARES
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.gzip.compress.excludedcontenttypes=image/png, image/jpeg, font/woff2

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `public`)
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --accesslog
      - --log
      - --api

  rr7:
    build:
      context: ./frontend/rr7
    environment:
      PLONE_API_PATH: http://rr7.sneridagh-dev.localhost
      PLONE_INTERNAL_API_PATH: http://backend:8080/Plone
      DEBUG: axios
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Service
      - traefik.http.services.svc-frontend-rr7.loadbalancer.server.port=3000
      # Routers
      ## /
      - traefik.http.routers.rt-frontend-rr7.rule=Host(`rr7.sneridagh-dev.localhost`)
      - traefik.http.routers.rt-frontend-rr7.entrypoints=http
      - traefik.http.routers.rt-frontend-rr7.service=svc-frontend-rr7
      - traefik.http.routers.rt-frontend-rr7.middlewares=gzip

  frontend:
    build:
      context: ./frontend
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Service
      - traefik.http.services.svc-frontend.loadbalancer.server.port=3000
      # Routers
      ## /
      - traefik.http.routers.rt-frontend.rule=Host(`sneridagh-dev.localhost`)
      - traefik.http.routers.rt-frontend.entrypoints=http
      - traefik.http.routers.rt-frontend.service=svc-frontend
      - traefik.http.routers.rt-frontend.middlewares=gzip

  backend:
    build:
      context: ./backend
    environment:
      RELSTORAGE_DSN: "dbname='${DB_NAME:-plone}' user='${DB_NAME:-plone}' host='${DB_HOST:-db}' password='${DB_PASSWORD:-rHPsyjqvWSEG}' port='${DB_PORT:-5432}'"
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Services
      - traefik.http.services.svc-backend.loadbalancer.server.port=8080

      # Middlewares
      ## VHM rewrite /++api++/
      - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
      - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.replacement=/VirtualHostBase/http/sneridagh-dev.localhost:80/Plone/++api++/VirtualHostRoot$$1"
      ## VHM rewrite /++api++/ RR7
      - "traefik.http.middlewares.mw-backend-vhm-api-rr7.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
      - "traefik.http.middlewares.mw-backend-vhm-api-rr7.replacepathregex.replacement=/VirtualHostBase/http/rr7.sneridagh-dev.localhost:80/Plone/++api++/VirtualHostRoot$$1"

      ## VHM rewrite /ClassicUI/
      - "traefik.http.middlewares.mw-backend-vhm-classic.replacepathregex.regex=^/ClassicUI($$|/.*)"
      - "traefik.http.middlewares.mw-backend-vhm-classic.replacepathregex.replacement=/VirtualHostBase/http/sneridagh-dev.localhost:80/Plone/VirtualHostRoot/_vh_ClassicUI$$1"

      ## Basic Authentication
      ### Note: all dollar signs in the hash need to be doubled for escaping.
      ### To create user:password pair, it's possible to use this command:
      ### echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
      ### Defaults to admin:admin
      - traefik.http.middlewares.mw-backend-auth.basicauth.users=admin:$$apr1$$uZPT5Fgu$$AmlIdamxT5ipBvPlsdfD70

      # Routes
      ## /++api++
      - traefik.http.routers.rt-backend-api.rule=Host(`sneridagh-dev.localhost`) && (PathPrefix(`/++api++`))
      - traefik.http.routers.rt-backend-api.entrypoints=http
      - traefik.http.routers.rt-backend-api.service=svc-backend
      - traefik.http.routers.rt-backend-api.middlewares=gzip,mw-backend-vhm-api

      ## /++api++ RR7
      - traefik.http.routers.rt-backend-api-rr7.rule=Host(`rr7.sneridagh-dev.localhost`) && (PathPrefix(`/++api++`))
      - traefik.http.routers.rt-backend-api-rr7.entrypoints=http
      - traefik.http.routers.rt-backend-api-rr7.service=svc-backend
      - traefik.http.routers.rt-backend-api-rr7.middlewares=gzip,mw-backend-vhm-api-rr7
      ## /ClassicUI
      - traefik.http.routers.rt-backend-classic.rule=Host(`sneridagh-dev.localhost`) && PathPrefix(`/ClassicUI`)
      - traefik.http.routers.rt-backend-classic.entrypoints=http
      - traefik.http.routers.rt-backend-classic.service=svc-backend
      - traefik.http.routers.rt-backend-classic.middlewares=gzip,mw-backend-auth,mw-backend-vhm-classic

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: plone
      POSTGRES_PASSWORD: rHPsyjqvWSEG
      POSTGRES_DB: plone
    volumes:
      - vol-site-data:/var/lib/postgresql/data

volumes:
  vol-site-data: {}
