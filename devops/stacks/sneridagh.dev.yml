---
version: '3.8'

services:

  frontend:
    image: ghcr.io/sneridagh/sneridagh-dev-frontend:${STACK_PARAM:-latest}
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
    depends_on:
      - backend
    networks:
      - nw-internal
      - public
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=nw-internal
        - traefik.constraint-label=public
        # Service
        - traefik.http.services.svc-frontend.loadbalancer.server.port=3000
        # Routers
        ## /
        - traefik.http.routers.rt-frontend.rule=Host(`sneridagh.dev`)
        - traefik.http.routers.rt-frontend.entrypoints=https
        - traefik.http.routers.rt-frontend.tls=true
        - traefik.http.routers.rt-frontend.tls.certresolver=le
        - traefik.http.routers.rt-frontend.service=svc-frontend
        - traefik.http.routers.frontend.middlewares=gzip

  backend:
    image: ghcr.io/sneridagh/sneridagh-dev-backend:${STACK_PARAM:-latest}
    environment:
      RELSTORAGE_DSN: "dbname='${DB_NAME:-plone}' user='${DB_USER:-plone}' host='${DB_HOST:-db}' password='${DB_PASSWORD:-rHPsyjqvWSEG}' port='${DB_PORT:-5432}'"
    depends_on:
      - db
    networks:
      - nw-internal
      - public
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=nw-internal
        - traefik.constraint-label=public
        # Services
        - traefik.http.services.svc-backend.loadbalancer.server.port=8080

        # Middlewares
        ## VHM rewrite /++api++/
        - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
        - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.replacement=/VirtualHostBase/https/sneridagh.dev:443/Plone/++api++/VirtualHostRoot$$1"

        ## VHM rewrite /api/ (Plone NextJS)
        - "traefik.http.middlewares.mw-backend-vhm-api-alt.replacepathregex.regex=^/api($$|/.*)"
        ## We remove the incoming /api and just use the path
        - "traefik.http.middlewares.mw-backend-vhm-api-alt.replacepathregex.replacement=$$1"

        ## VHM rewrite /ClassicUI/
        - "traefik.http.middlewares.mw-backend-vhm-classic.replacepathregex.regex=^/ClassicUI($$|/.*)"
        - "traefik.http.middlewares.mw-backend-vhm-classic.replacepathregex.replacement=/VirtualHostBase/https/sneridagh.dev:443/Plone/VirtualHostRoot/_vh_ClassicUI$$1"

        ## Basic Authentication
        ### Note: all dollar signs in the hash need to be doubled for escaping.
        ### To create user:password pair, it's possible to use this command:
        ### echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
        ### Defaults to admin:admin
        - traefik.http.middlewares.mw-backend-auth.basicauth.users=admin:$$apr1$$uZPT5Fgu$$AmlIdamxT5ipBvPlsdfD70

        # Routes
        ## /++api++
        - traefik.http.routers.rt-backend-api.rule=Host(`sneridagh.dev`) && PathPrefix(`/++api++`)
        - traefik.http.routers.rt-backend-api.entrypoints=https
        - traefik.http.routers.rt-backend-api.tls=true
        - traefik.http.routers.rt-backend-api.service=svc-backend
        - traefik.http.routers.rt-backend-api.middlewares=gzip,mw-backend-vhm-api

        ## /api (NextJS rewrite workaround)
        - traefik.http.routers.rt-backend-api-alt.rule=Host(`sneridagh.dev`) && PathPrefix(`/api`)
        - traefik.http.routers.rt-backend-api-alt.entrypoints=https
        - traefik.http.routers.rt-backend-api-alt.tls=true
        - traefik.http.routers.rt-backend-api-alt.service=svc-backend
        - traefik.http.routers.rt-backend-api-alt.middlewares=gzip,mw-backend-vhm-api-alt

        ## /ClassicUI
        - traefik.http.routers.rt-backend-classic.rule=Host(`sneridagh.dev`) && PathPrefix(`/ClassicUI`)
        - traefik.http.routers.rt-backend-classic.entrypoints=https
        - traefik.http.routers.rt-backend-classic.tls=true
        - traefik.http.routers.rt-backend-classic.service=svc-backend
        - traefik.http.routers.rt-backend-classic.middlewares=gzip,mw-backend-auth,mw-backend-vhm-classic

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: plone
      POSTGRES_PASSWORD: rHPsyjqvWSEG
      POSTGRES_DB: plone
    volumes:
      - vol-site-data:/var/lib/postgresql/data
    networks:
      - nw-internal

volumes:
  vol-site-data:
    driver_opts:
      type: none
      device: /srv/sneridagh-dev/data
      o: bind

networks:
  public:
    external: true
  nw-internal:
    internal: true
    driver: overlay
